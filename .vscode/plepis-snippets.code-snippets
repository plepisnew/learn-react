{
  // Place your plepis workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  /* ESLint Snippets */
  "Disable unused vars": {
    "scope": "typescript,typescriptreact",
    "prefix": "unused",
    "body": ["/* eslint @typescript-eslint/no-unused-vars: 0 */"],
    "description": "Disables ESLint rule `no-unused-vars` for the following line"
  },
  "Disable explicit any": {
    "scope": "typescript,typescriptreact",
    "prefix": "noAny",
    "body": ["/* eslint @typescript-eslint/no-explicit-any: 0 */"],
    "description": "Disables ESLint rule `no-explicit-any` for the following line"
  },
  /* TypeScript React Snippets */
  "React Functional Component": {
    "scope": "typescriptreact",
    "prefix": "rfc",
    "body": [
      "import React from 'react';",
      "",
      "const $1: React.FC = () => {",
      "\t$0",
      "",
      "\treturn ($2);",
      "};",
      "",
      "export default $1;"
    ],
    "description": "Creates a React functional component and default exports it"
  },
  "React Functional Component with Props": {
    "scope": "typescriptreact",
    "prefix": "rfcp",
    "body": [
      "import React from 'react';",
      "",
      "interface Props {",
      "\t$3",
      "}",
      "",
      "const $1: React.FC<Props> = (props: Props) => {",
      "\t$0",
      "",
      "\treturn ($2);",
      "};",
      "",
      "export default $1;"
    ],
    "description": "Creates a React functional component with props and default exports it"
  },
  "React Functional Component named export": {
    "scope": "typescriptreact",
    "prefix": "rfce",
    "body": [
      "import React from 'react';",
      "",
      "const $1: React.FC = () => {",
      "\t$0",
      "",
      "\treturn ($2);",
      "};",
      "",
      "export { $1 };"
    ],
    "description": "Creates a React functional component and named exports it"
  },
  "React Functional Component with Props named export": {
    "scope": "typescriptreact",
    "prefix": "rfcpe",
    "body": [
      "import React from 'react';",
      "",
      "interface Props {",
      "\t$3",
      "}",
      "",
      "const $1: React.FC<Props> = (props: Props) => {",
      "\t$0",
      "",
      "\treturn ($2);",
      "};",
      "",
      "export { $1 };"
    ],
    "description": "Creates a React functional component with props and named exports it"
  }
}
